#비트마스킹
#정수를 이진수로 표현, 비트 연산을 통해 문제를 해결해 나가는 기술

#ex) 스위치

a = 0b1010010101
b = 0b1111010000

#######대표적인 비트 연산######

#And 연산
print(bin(a & b))

#OR 연산
print(bin(a | b))

#XOR 연산(^) : 대응하는 숫자가 서로 다를 경우 1을 반환
print(bin(a ^ b))

#Shift(>>, <<) 연산 : a << b => a를 b칸 왼쪽으로 쉬프트
print(bin(a & b))

#Not(~) 연산 : 비트 반전
print(bin(~a))

####비트 연산 응용###
n = 3

print(bin(1 << n))
#원소 추가, n번째 수를 추가
print(bin(0b0010 | (1 << n)))

#원소 제거, n번째 수를 제거
print(bin(0b1010 & ~(1 << n)))

#원소 조회, n번째 수가 있나 없나 확인
print(bin(0b1010 & (1 << n)))

#원소 토글, n번째 수가 있으면 없애고, 없으면 생성
print(bin(0b1010 ^ (1 << n)))